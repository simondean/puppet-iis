Puppet::Type.newtype(:iis_site) do
  @doc = "IIS Site"

  ensurable

  newparam(:name) do
    desc "Site name"
  end

  [:id,
   :serverautostart,
   :limits_maxbandwidth,
   :limits_maxconnections,
   :limits_connectiontimeout,
   :logfile_logextfileflags,
   :logfile_customlogpluginclsid,
   :logfile_logformat,
   :logfile_directory,
   :logfile_period,
   :logfile_truncatesize,
   :logfile_localtimerollover,
   :logfile_enabled,
   :physicalpath,
   :tracefailedrequestslogging_enabled,
   :tracefailedrequestslogging_directory,
   :tracefailedrequestslogging_maxlogfiles,
   :tracefailedrequestslogging_maxlogfilesizekb,
   :tracefailedrequestslogging_customactionsenabled,
   :applicationdefaults_path,
   :applicationdefaults_applicationpool,
   :applicationdefaults_enabledprotocols,
   :applicationdefaults_serviceautostartenabled,
   :applicationdefaults_serviceautostartprovider,
   :virtualdirectorydefaults_path,
   :virtualdirectorydefaults_physicalpath,
   :virtualdirectorydefaults_username,
   :virtualdirectorydefaults_password,
   :virtualdirectorydefaults_logonmethod,
   :virtualdirectorydefaults_allowsubdirconfig,
   :ftpserver_allowutf8,
   :ftpserver_serverautostart,
   :ftpserver_connections_unauthenticatedtimeout,
   :ftpserver_connections_controlchanneltimeout,
   :ftpserver_connections_datachanneltimeout,
   :ftpserver_connections_disablesocketpooling,
   :ftpserver_connections_serverlistenbacklog,
   :ftpserver_connections_minbytespersecond,
   :ftpserver_connections_maxconnections,
   :ftpserver_connections_resetonmaxconnections,
   :ftpserver_connections_maxbandwidth,
   :ftpserver_security_datachannelsecurity_matchclientaddressforport,
   :ftpserver_security_datachannelsecurity_matchclientaddressforpasv,
   :ftpserver_security_commandfiltering_maxcommandline,
   :ftpserver_security_commandfiltering_allowunlisted,
   :ftpserver_security_ssl_servercerthash,
   :ftpserver_security_ssl_servercertstorename,
   :ftpserver_security_ssl_ssl128,
   :ftpserver_security_ssl_controlchannelpolicy,
   :ftpserver_security_ssl_datachannelpolicy,
   :ftpserver_security_sslclientcertificates_clientcertificatepolicy,
   :ftpserver_security_sslclientcertificates_useactivedirectorymapping,
   :ftpserver_security_sslclientcertificates_validationflags,
   :ftpserver_security_sslclientcertificates_revocationfreshnesstime,
   :ftpserver_security_sslclientcertificates_revocationurlretrievaltimeout,
   :ftpserver_security_authentication_anonymousauthentication_enabled,
   :ftpserver_security_authentication_anonymousauthentication_username,
   :ftpserver_security_authentication_anonymousauthentication_password,
   :ftpserver_security_authentication_anonymousauthentication_defaultlogondomain,
   :ftpserver_security_authentication_anonymousauthentication_logonmethod,
   :ftpserver_security_authentication_basicauthentication_enabled,
   :ftpserver_security_authentication_basicauthentication_defaultlogondomain,
   :ftpserver_security_authentication_basicauthentication_logonmethod,
   :ftpserver_security_authentication_clientcertauthentication_enabled,
   :ftpserver_messages_exitmessage,
   :ftpserver_messages_greetingmessage,
   :ftpserver_messages_bannermessage,
   :ftpserver_messages_maxclientsmessage,
   :ftpserver_messages_suppressdefaultbanner,
   :ftpserver_messages_allowlocaldetailederrors,
   :ftpserver_messages_expandvariables,
   :ftpserver_filehandling_keeppartialuploads,
   :ftpserver_filehandling_allowreplaceonrename,
   :ftpserver_filehandling_allowreaduploadsinprogress,
   :ftpserver_firewallsupport_externalip4address,
   :ftpserver_userisolation_mode,
   :ftpserver_userisolation_activedirectory_adusername,
   :ftpserver_userisolation_activedirectory_adpassword,
   :ftpserver_userisolation_activedirectory_adcacherefresh,
   :ftpserver_directorybrowse_showflags,
   :ftpserver_directorybrowse_virtualdirectorytimeout,
   :ftpserver_logfile_logextfileflags,
   :ftpserver_logfile_directory,
   :ftpserver_logfile_period,
   :ftpserver_logfile_truncatesize,
   :ftpserver_logfile_localtimerollover,
   :ftpserver_logfile_enabled,
   :ftpserver_logfile_selectivelogging].each do |property|
		newproperty(property) do
      munge do |value|
        value.to_s
      end
    end
  end

  newproperty(:bindings, :array_matching => :all) do
  end
end
